# An unique identifier for the head node and workers of this cluster.
cluster_name: sgd.pytorch.neural_image_compression

# The maximum number of workers nodes to launch in addition to the head
# node. This takes precedence over min_workers. min_workers default to 0.
min_workers: 3
initial_workers: 3
max_workers: 3

target_utilization_fraction: 0.9

# If a node is idle for this many minutes, it will be removed.
idle_timeout_minutes: 20
# docker:
#     image: tensorflow/tensorflow:1.5.0-py3
#     container_name: ray_docker

# Cloud-provider specific configuration.
provider:
    type: aws
    region: us-west-1

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu

head_node:
    InstanceType: g4dn.xlarge
    ImageId: ami-074c29e29c500f623
    InstanceMarketOptions:
        MarketType: spot
           # SpotOptions:
           #     MaxPrice: "9.0"


worker_nodes:
    InstanceType: g4dn.xlarge
    ImageId: ami-074c29e29c500f623
    # Run workers on spot by default. Comment this out to use on-demand.
    InstanceMarketOptions:
        MarketType: spot
        # SpotOptions:
        #     MaxPrice: "9.0"

setup_commands:
    - ray &> /dev/null || pip install -U https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-0.9.0.dev0-cp36-cp36m-manylinux1_x86_64.whl
    - pip install -U ipdb ray[rllib] torch torchvision
    - pip install tqdm wandb
    # Install apex.
    # - rm -rf apex || true
    # - git clone https://github.com/NVIDIA/apex && cd apex && pip install -v --no-cache-dir  ./ || true


file_mounts:
    "~/lookahead.py": "./lookahead.py"
    "~/radam.py": "./radam.py"
    "~/model.py": "./model.py"
    "~/ml_logging.py": "./ml_logging.py"
    "~/ray_sgd_additions.py": "./ray_sgd_additions.py"

    "~/anaconda3/lib/python3.6/site-packages/ray/util/sgd/torch/batch_logs_reporter.py": "../../batch_logs_reporter.py"
    "~/anaconda3/lib/python3.6/site-packages/ray/util/sgd/torch/torch_runner.py": "../../torch_runner.py"
    "~/anaconda3/lib/python3.6/site-packages/ray/util/sgd/torch/distributed_torch_runner.py": "../../distributed_torch_runner.py"
    "~/anaconda3/lib/python3.6/site-packages/ray/util/sgd/torch/torch_trainer.py": "../../torch_trainer.py"
    "~/anaconda3/lib/python3.6/site-packages/ray/util/sgd/torch/training_operator.py": "../../training_operator.py"

# Custom commands that will be run on the head node after common setup.
head_setup_commands: []

# Custom commands that will be run on worker nodes after common setup.
worker_setup_commands: []

# # Command to start ray on the head node. You don't need to change this.
head_start_ray_commands:
    - ray stop
    - ray start --head --redis-port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --object-store-memory=1000000000

# Command to start ray on worker nodes. You don't need to change this.
worker_start_ray_commands:
    - ray stop
    - ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076 --object-store-memory=1000000000

